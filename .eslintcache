[{"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\index.js":"1","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\reportWebVitals.js":"2","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\App.js":"3","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Header.js":"4","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Main.js":"5","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Footer.js":"6","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\PopupWithForm.js":"7","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\utils\\Api.js":"8","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Card.js":"9","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\ImagePopup.js":"10","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\utils\\api.js":"11","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\contexts\\CurrentUserContext.js":"12","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\EditProfilePopup.js":"13","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\EditAvatarPopup.js":"14","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\AddPlacePopup.js":"15","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\DeletePlacePopup.js":"16","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Login.js":"17","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Register.js":"18","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\ProtectedRoute.js":"19","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\utils\\userAuth.js":"20","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\UserCards.js":"21","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\InfoTooltip.js":"22"},{"size":604,"mtime":1614018639952,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":8325,"mtime":1614324559639,"results":"26","hashOfConfig":"24"},{"size":376,"mtime":1614163363106,"results":"27","hashOfConfig":"24"},{"size":1763,"mtime":1614163360013,"results":"28","hashOfConfig":"24"},{"size":176,"mtime":1611736530562,"results":"29","hashOfConfig":"24"},{"size":1323,"mtime":1614167807489,"results":"30","hashOfConfig":"24"},{"size":2292,"mtime":1611826178650,"results":"31","hashOfConfig":"24"},{"size":1517,"mtime":1614159349877,"results":"32","hashOfConfig":"24"},{"size":810,"mtime":1614156253596,"results":"33","hashOfConfig":"24"},{"size":2734,"mtime":1613039256207,"results":"34","hashOfConfig":"24"},{"size":86,"mtime":1612963375039,"results":"35","hashOfConfig":"24"},{"size":2290,"mtime":1613131594216,"results":"36","hashOfConfig":"24"},{"size":1556,"mtime":1613132859605,"results":"37","hashOfConfig":"24"},{"size":2173,"mtime":1613132787391,"results":"38","hashOfConfig":"24"},{"size":800,"mtime":1614156255881,"results":"39","hashOfConfig":"24"},{"size":1775,"mtime":1614325504147,"results":"40","hashOfConfig":"24"},{"size":1907,"mtime":1614325595069,"results":"41","hashOfConfig":"24"},{"size":325,"mtime":1614150997963,"results":"42","hashOfConfig":"24"},{"size":1501,"mtime":1614324787958,"results":"43","hashOfConfig":"24"},{"size":3085,"mtime":1614324230811,"results":"44","hashOfConfig":"24"},{"size":1629,"mtime":1614330677635,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1x956cg",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\index.js",[],["92","93"],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\reportWebVitals.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\App.js",["94","95","96"],"import React from \"react\";\nimport Login from './Login.js';\nimport UserCards from './UserCards.js';\nimport Register from './Register.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport * as userAuth from '../utils/userAuth';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\n\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setIsSelectedCard] = React.useState(false);\n  const [isDeleteCardPopup, setIsDeleteCardPopup] = React.useState(false);\n  const [isImageFormOpen, setIsImageFormOpen] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState('');\n  const [cards, setCards] = React.useState([]);\n  const [deleteCard, setDeleteCard] = React.useState({});\n  const [renderLoading, setRenderLoading] = React.useState(false);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [successfulRegistration, setSuccessfulRegistration] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const history = useHistory();\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userInfo, cardsResult]) => {\n        setCards(cardsResult);\n        setCurrentUser(userInfo);\n      })\n      .catch((err) => console.log(`Ошибка получении данных: ${err}`))\n  }, []);\n\n  React.useEffect(() => {\n    checkToken();\n  }, [loggedIn, history])\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => console.log(`Ошибка: ${err}`)) \n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    if (isOwn) {\n      setIsDeleteCardPopup(true);\n      setDeleteCard(card);\n    }\n  }\n\n  function confirmedDeleteCard(card) {\n    api.deleteCard(card)\n        .then(() => {\n          const newCards = cards.filter((c) => c._id !== card._id);\n          setCards(newCards);\n          closeAllPopups();\n        })\n        .catch((err) => console.log(`Ошибка: ${err}`))\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  \n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  \n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleInfoTooltip() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsInfoTooltipOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n\n    //setIsSelectedCard(false);\n    setIsImageFormOpen(false);\n    setIsDeleteCardPopup(false);\n    setRenderLoading(false);\n  }\n\n  function handleCardClick(data) {\n    setIsImageFormOpen(true);\n    setIsSelectedCard(data);\n  }\n\n  function closePopupOverlay(e) {\n    e.target.classList.contains('popup_open-close') && closeAllPopups()\n  }\n\n  function closePopupEscape(evt) {\n    if (evt.key === \"Escape\") {\n      closeAllPopups();\n    }\n  }\n\n  function handleUpdateUser(e) {\n    api.updateUserInfo(e)\n      .then((userData) => {\n        setCurrentUser(userData);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка обновления данных пользователя: ${err}`))\n  }\n\n  function handleUpdateAvatar(e) {\n    api.updateAvatar(e)\n      .then((userData) => {\n        setCurrentUser(userData);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка обновления данных пользователя: ${err}`))\n  }\n\n  function handleAddPlace(data) {\n    api.addNewCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка добавления новой карточки: ${err}`))\n      \n  }\n\n  /*function onRegister(email, password) {\n    userAuth.register(email, password)\n      .then((res) => {\n        if (res.statusCode !== 400) {\n          handleInfoTooltip()\n          setSuccessfulRegistration(true);\n          history.push(\"/\");\n        } else {\n          setSuccessfulRegistration(false);\n        }\n        handleInfoTooltip();\n      })\n      .catch((err) => {\n        console.log(err);\n        handleInfoTooltip();\n        setSuccessfulRegistration(false);\n      })\n      \n  }*/\n\n  function onRegister(data) {\n    userAuth.register( data )\n      .then(() => {\n        setIsInfoTooltipOpen(true);\n        setSuccessfulRegistration(true);\n        history.push('/sign-in');\n      })   \n      .catch((err) => {\n        console.log(err);\n        setIsInfoTooltipOpen(true);\n        setSuccessfulRegistration(false);\n      })   \n  }\n\n  function onLogin(data) {\n    userAuth.authorization(data)\n      .then((res) => {\n        setLoggedIn(true);\n        localStorage.setItem('jwt', res.token);\n        history.push(\"/user-cards\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsInfoTooltipOpen(true);\n        setSuccessfulRegistration(false);\n      })\n  }\n\n  function checkToken() {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      userAuth.getContent(jwt)\n        .then(() => {\n          setLoggedIn(true);\n          history.push(\"/user-cards\");\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  function signOut() {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"body-background\">\n\n      <div className=\"page\">\n\n          <Switch>\n            <Route path=\"/sign-up\">\n              <Register \n                onRegister={onRegister}\n                signOut={signOut}\n              />\n            </Route>\n\n            <Route path=\"/sign-in\">\n              <Login \n                onLogin={onLogin}\n                signOut={signOut}\n              />\n            </Route>\n\n            <ProtectedRoute path=\"/user-cards\"\n              component={UserCards}\n              successfulRegistration={successfulRegistration}\n              signOut={signOut}\n              loggedIn={loggedIn}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              isOpenAvatarPopup={isEditAvatarPopupOpen}\n              isOpenProfilePopup={isEditProfilePopupOpen}\n              isOpenAddPlacePopup={isAddPlacePopupOpen}\n              isOpenDeleteCardPopup={isDeleteCardPopup}\n              isOpenImageForm={isImageFormOpen}\n              onClose={closeAllPopups}\n              closePopupOverlay={closePopupOverlay}\n              closePopupEscape={closePopupEscape}\n              onUpdateAvatar={handleUpdateAvatar}\n              renderLoading={renderLoading}\n              setRenderLoading={setRenderLoading}\n              onUpdateUser={handleUpdateUser}\n              onAddPlace={handleAddPlace}\n              cardSelected={selectedCard}\n              overlayClose={closePopupOverlay}\n              cardDelete={deleteCard}\n              onDeletePlace={confirmedDeleteCard}\n            />\n\n            <Route path=\"/\">\n              {loggedIn ? <Redirect to=\"/user-cards\" /> : <Redirect to=\"/sign-in\" />}\n            </Route>\n\n          </Switch>\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          successfulRegistration={successfulRegistration}\n          overlayClose={closePopupOverlay}\n          closePopupEscape={closePopupEscape}\n        />\n      </div>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Header.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Main.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Footer.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\PopupWithForm.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\utils\\Api.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Card.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\ImagePopup.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\utils\\api.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\EditProfilePopup.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\EditAvatarPopup.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\AddPlacePopup.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\DeletePlacePopup.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Login.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\Register.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\utils\\userAuth.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\UserCards.js",[],"C:\\Users\\Name\\Documents\\project\\mesto_react\\src\\components\\InfoTooltip.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":40,"column":6,"nodeType":"103","endLine":40,"endColumn":25,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":82,"column":12,"nodeType":"107","messageId":"108","endLine":82,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":253,"column":15,"nodeType":"111","endLine":253,"endColumn":42},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'checkToken'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-unused-vars","'handleInfoTooltip' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [loggedIn, history, checkToken]",{"range":"117","text":"118"},[1749,1768],"[loggedIn, history, checkToken]"]